Introduction to Java Programming
================================

Input/Ouput
-----------
**Output** pada java kita bisa menggunakan perintah ``System.out.println();`` untuk mencetak hasil code. Contoh :

.. code-block:: java

    public class HelloWorld {
        public static void main(String[] args) {
            System.out.println("Hello, World!");
            //output print (tanpa enter )
            System.out.print("Hello");
        }
    }

Output:

.. code-block:: console

    Hello, World!
    Hello

**Input** pada java bisa menggunakan ``Scanner`` dari ``java.utils.scanner``

.. code-block:: java

    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            //Scanner
            Scanner scan = new Scanner(System.in);
            //Variabel
            int a ;

            System.out.print("Input Angka : ");
            a = scan.nextInt();
            scan.nextLine();
            System.out.printf("Angka yang di Input: %d", a);
        }

    }

Output:

.. code-block:: console

    Input Angka : 5
    Angka yang di Input: 5

Dari kode diatas dapat dilihat bahwa saat kita ingin memakai ``Scanner``, kita wajib **mengimport** Scanner dari ``java.util.scanner`` terlebih dahulu.
Hal ini dapat dilakukan dengan secara otomatis dengan menekan tombol ``ctrl + space`` pada keyboard.

.. note:: 
    biasanya saat ingin menginput selain string kita wajib menggunakan     ``nextLine()`` untuk menangkap sisa enter

Compiling in java 
-----------------
Biasanya pada java kita menjalankan dengan menekan tombol run 
untuk short cut kita bisa menggunakan ``F11``

.. image:: /images/01/Run.jpg

Special Characters
------------------
.. note:: 
    - Comment ``//`` : adalah kata-kata / kalimat yang tidak ingin di compile 
    - Automatic ``ctrl + space`` : untuk menampilkan saran otomatis dari IDE 
    - Brackects ``{}``: untuk memulai dan mengakhiri scope
    - Paranthesis ``()``: digunakan pada methods
    - ``""``: untuk string 
    - 

.. .. list-table:: Special Characters
..     :width: 25 25 50 
..     :header-rows: 1
..     * - Heading row 1, column1
..       - Heading row 1, column 2
..       - Heading rom 3, column 3
..     * - Row1, Column 1

Variabel
---------
Variabel dalam bahasa pemrograman adalah tempat atau wadah yang 
di beri nama untuk menyimpan sebuah nilai dengan tipe data tertentu. 
Contoh penggunaan variabel: 

.. code-block:: java 
    
  public class Main {
        public static void main(String[] args) {
            int a = 5;
            double b =  3.4;
            boolean c = false;
            
            System.out.println(a);
            System.out.println(b);
            System.out.println(c);
       
        }
    }

Output:

.. code-block:: console

    5
    3.4
    false


Tipe Data 
---------
Berikut beberapa contoh tipe-tipe data di dalam java: 

.. image:: /images/01/type-data.jpg

Tipe data di dalam java dibagi menjadi dua yaitu primitive dan non-primitive 

.. image:: /images/01/tipe-data.jpg
    :width: 500

.. list-table:: Perbedaan Primitive dan Non-primitive
   :widths: 10 45 45
   :header-rows: 1
   

   * - Perbedaan
     - Primitive 
     - Non-primitive
   * - Passing Data
     - Menyimpan nilai yang sebenarnya (pass by value) dalam sebuah method
     - Menyimpan Alamat ke alokasi memori (pass by reference) dalam sebuah method
   * - Nilai Default
     - memiliki nilai default apabila tidak di inisialisasi, cth : int = 0
     - Memiliki nilai default “null”
   * - Penulisan
     - Di awali dengan huruf kecil 
     - Di awali dengan huruf besar

